{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs26 \cf0 The Python script frequency_solver.py is written to determine the fundamental frequencies omega_x, omega_y, and omega_z for each of many particle orbits within a galaxy, and use this information to make a plot of omega_z/omega_x vs. omega_y/omega_x (or some variation of this).\
\
The Python code is currently designed to be run in conjunction with ChaNGa and GalactICS.  In order to obtain sensible results, one must complete the following steps in order:\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	1.	}Determine which galactic potential model to use that is established within the GalactICS framework.  Each model has at least one .param file.  Once you have selected your desired model, set the variable nobj within the corresponding .param file(s) to equal the number of particles you wish to make up your prototype galaxy.  Edit the other parameters as needed to establish the desired initial conditions for particle orbits.  Run GalactICS to produce a file containing information on these initial conditions.\
{\listtext	2.	}Determine the parameters (aside from the initial conditions) you wish to impose on the integration of particle orbits within your prototype galaxy.  Edit the file orbit_integration.param accordingly.  Run ChaNGa to read the initial conditions file (produced by GalactICS), complete the integration, and produce .tipsy files containing the phase space information on the integrated orbits.\
{\listtext	3.	}Run the script frequency_solver.py to read the .tipsy files, generate the integrated orbits\'92 fundamental frequencies, and produce the desired frequency plot.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
It\'92s worth noting that one can uncomment lines 75-85 of the Python script to analyze specific orbits\'97this is particularly useful for debugging if there are any doubts about the accuracy of the frequency plot.\
\
The Python script uses a package called SuperFreq to calculate the fundamental frequencies from the phase space time series of the integrated orbits.  For more information on SuperFreq, see the documentation {\field{\*\fldinst{HYPERLINK "https://superfreq.readthedocs.io/en/latest/index.html"}}{\fldrslt here}}.  In particular, see the Reference / API page for more information on the specific SuperFreq-based commands used in the Python script.}